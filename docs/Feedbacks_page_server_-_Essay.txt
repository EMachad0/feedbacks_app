üîÅ

Feedbacks page server - Essay
Our open position needs a person to maintain and evolve our product backend, as well as keep good communication with pairs and the product team. We
take care of the web product that is the main platform for our customers to
manage and access their data.
This playground project aims to the day-to-day activities.
Context
Essay specification
Requirements
Data specification
How the essay will be evaluated?

Context
Incognia‚Äôs customers can report feedback to an account or device to control
specific cases. The feedback processing is asynchronous, so they don‚Äôt know
the final result right away. For example, how many accounts or devices were
affected.
To give visibility over this, our product designer proposed an MVP page to list
these feedback results.
You were assigned to understand the problem and propose a back-end
implementation to serve the front-end.

Feedbacks page server - Essay

1

Essay specification
Write a document in English describing the high-level solution, the back-end
classes and layers, and the database schema and queries.
Remember to justify your choices;
Suggest the server protocol and database that you judge is most suitable;
Feel free to use images if you deem it necessary;
For simplification, doesn‚Äôt consider authentication;

Requirements
In this section, we provide the expected behavior for the page and server.
The front-end should be able to list, filter and paginate feedback;
All requests should receive an organization_id to identify the customer
organization;
All filters can be combined: ID, Dates, or Feedback;

Feedbacks page server - Essay

2

The ID filter can receive multiples values of ‚ÄúAccount ID‚Äù or ‚ÄúEncoded
Installation ID‚Äù;
The Dates filter looks for ‚ÄúProcessed Time‚Äù or ‚ÄúFeedback Time‚Äù;
The Feedback filter can receive multiple values of ‚ÄúFeedback‚Äù;

Data specification
Another team will be responsible for writing the feedback results into the
database that you will propose. Consider that the data will be available for
querying and that it‚Äôs expected to handle about 10M insertions daily and about
500 accesses daily.
There‚Äôs an example of the data that they have available:
// Feedback
{
id: 7,
organization_id: 4,
reported_by_user_id: '2ead2e59-b753-4f2f-b83a-dc29a0f15911'
account_id: 'db00bd7f-101f-4a75-85dd-43b4bf55ff33',
installation_id: '4e017ca6-a10e-4dda-bbf4-a841c59b4060',
encoded_installation_id: 'NGUwMTdjYTYtYTEwZS00ZGRhLWJiZjQtYTg0MW
feedback_type: 'verified',
feedback_time: '2023-08-14 12:10:00'
}
// Feedback Result
{
feedback_id: 7,
affected_devices: 10,
estimated_affected_accounts: 5
processed_time: '2023-08-14 12:12:00'
}
// User
{
id: '2ead2e59-b753-4f2f-b83a-dc29a0f15911',
name: 'Mike Ehrmantraut',

Feedbacks page server - Essay

3

email: 'mike@lospolloshermanos.com'
}

The feedback_type attribute can be one of these: verified , reset , account_takeover ,
or identity_fraud ;
The encoded_installation_id attribute is a Base64 of <INSTALLATION_ID>:<APP_ID>
$ ENCODED_INSTALLATION_ID='NGUwMTdjYTYtYTEwZS00ZGRhLWJiZjQ
$ echo -n $ENCODED_INSTALLATION_ID | base64 --decode
4e017ca6-a10e-4dda-bbf4-a841c59b4060:93dedd47-0728-48ad-ac85-d
$ echo -n 'some-installation-id:some-app-id' | base64
c29tZS1pbnN0YWxsYXRpb24taWQ6c29tZS1hcHAtaWQ=

How the essay will be evaluated?
Was the document clear and well-written?
Were the choices well-founded?
Does the solution solve the problem?

Feedbacks page server - Essay

4

